{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../fetch-api-data.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/button\";\nclass UserLoginFormComponent {\n  constructor(fetchApiData, dialogRef, snackBar, router) {\n    this.fetchApiData = fetchApiData;\n    this.dialogRef = dialogRef;\n    this.snackBar = snackBar;\n    this.router = router;\n    this.userData = {\n      Username: '',\n      Password: '',\n      Email: '',\n      Birthday: ''\n    };\n  }\n  ngOnInit() {}\n  loginUser() {\n    this.fetchApiData.userLogin(this.userData).subscribe(result => {\n      this.dialogRef.close();\n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n    }, result => {\n      this.router.navigate(['movies']);\n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n    });\n  }\n}\nUserLoginFormComponent.ɵfac = function UserLoginFormComponent_Factory(t) {\n  return new (t || UserLoginFormComponent)(i0.ɵɵdirectiveInject(i1.FetchApiDataService), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router));\n};\nUserLoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserLoginFormComponent,\n  selectors: [[\"app-user-login-form\"]],\n  inputs: {\n    userData: \"userData\"\n  },\n  decls: 13,\n  vars: 2,\n  consts: [[\"matInput\", \"\", \"placeholder\", \"Username\", \"type\", \"text\", \"name\", \"Username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"Password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function UserLoginFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"mat-card-title\");\n      i0.ɵɵtext(3, \"Log In!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"form\")(6, \"mat-form-field\")(7, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function UserLoginFormComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.userData.Username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function UserLoginFormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.userData.Password = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(10, \"mat-card-actions\")(11, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function UserLoginFormComponent_Template_button_click_11_listener() {\n        return ctx.loginUser();\n      });\n      i0.ɵɵtext(12, \" Log In \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.userData.Username);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.userData.Password);\n    }\n  },\n  dependencies: [i5.MatCard, i5.MatCardActions, i5.MatCardContent, i5.MatCardHeader, i5.MatCardTitle, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i7.MatInput, i8.MatFormField, i9.MatButton],\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});\nexport { UserLoginFormComponent };","map":{"version":3,"names":["UserLoginFormComponent","constructor","fetchApiData","dialogRef","snackBar","router","userData","Username","Password","Email","Birthday","ngOnInit","loginUser","userLogin","subscribe","result","close","open","duration","navigate","i0","ɵɵdirectiveInject","i1","FetchApiDataService","i2","MatDialogRef","i3","MatSnackBar","i4","Router","selectors","inputs","decls","vars","consts","template","UserLoginFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UserLoginFormComponent_Template_input_ngModelChange_7_listener","$event","UserLoginFormComponent_Template_input_ngModelChange_9_listener","UserLoginFormComponent_Template_button_click_11_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/dan/Documents/GitHub/myFlix-Angular-client/src/app/user-login-form/user-login-form.component.ts","/Users/dan/Documents/GitHub/myFlix-Angular-client/src/app/user-login-form/user-login-form.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-login-form',\n  templateUrl: './user-login-form.component.html',\n  styleUrls: ['./user-login-form.component.scss']\n})\nexport class UserLoginFormComponent implements OnInit {\n\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public dialogRef: MatDialogRef<UserLoginFormComponent>,\n    public snackBar: MatSnackBar,\n    private router: Router) { }\n  \n  ngOnInit(): void {\n  \n  }\n\n  loginUser(): void {\n    this.fetchApiData.userLogin(this.userData).subscribe((result) => {\n      this.dialogRef.close();\n      \n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n    }, (result) => {\n      this.router.navigate(['movies']);\n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n      \n    });\n  }\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>Log In!</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form>\n            <mat-form-field>\n                <input\n                    matInput\n                    [(ngModel)]=\"userData.Username\"\n                    placeholder=\"Username\"\n                    type=\"text\"\n                    name=\"Username\"\n                    required\n                >\n            </mat-form-field>\n            <mat-form-field>\n                <input\n                    matInput\n                    [(ngModel)]=\"userData.Password\"\n                    type = \"password\"\n                    placeholder=\"Password\"\n                    name=\"Password\"\n                    required\n                >\n            </mat-form-field>\n        </form>\n    </mat-card-content>\n    <mat-card-actions>\n        <button\n            mat-raised-button\n            (click)=\"loginUser()\"\n            color=\"primary\"\n        >\n            Log In\n        </button>\n    </mat-card-actions>\n</mat-card>"],"mappings":";;;;;;;;;;AAMA,MAKaA,sBAAsB;EAIjCC,YACSC,YAAiC,EACjCC,SAA+C,EAC/CC,QAAqB,EACpBC,MAAc;IAHf,KAAAH,YAAY,GAAZA,YAAY;IACZ,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,QAAQ,GAARA,QAAQ;IACP,KAAAC,MAAM,GAANA,MAAM;IANP,KAAAC,QAAQ,GAAG;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;EAM/C;EAE5BC,QAAQA,CAAA,GAER;EAEAC,SAASA,CAAA;IACP,IAAI,CAACV,YAAY,CAACW,SAAS,CAAC,IAAI,CAACP,QAAQ,CAAC,CAACQ,SAAS,CAAEC,MAAM,IAAI;MAC9D,IAAI,CAACZ,SAAS,CAACa,KAAK,EAAE;MAEtB,IAAI,CAACZ,QAAQ,CAACa,IAAI,CAACF,MAAM,EAAE,IAAI,EAAE;QAC/BG,QAAQ,EAAE;OACX,CAAC;IACJ,CAAC,EAAGH,MAAM,IAAI;MACZ,IAAI,CAACV,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,IAAI,CAACf,QAAQ,CAACa,IAAI,CAACF,MAAM,EAAE,IAAI,EAAE;QAC/BG,QAAQ,EAAE;OACX,CAAC;IAEJ,CAAC,CAAC;EACJ;;AA5BWlB,sBAAsB,C;mBAAtBA,sBAAsB,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,mBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAO,EAAA,CAAAC,MAAA;AAAA;AAAtB7B,sBAAsB,C;QAAtBA,sBAAsB;EAAA8B,SAAA;EAAAC,MAAA;IAAAzB,QAAA;EAAA;EAAA0B,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXnCjB,EAAA,CAAAmB,cAAA,eAAU;MAEcnB,EAAA,CAAAoB,MAAA,cAAO;MAAApB,EAAA,CAAAqB,YAAA,EAAiB;MAE5CrB,EAAA,CAAAmB,cAAA,uBAAkB;MAKFnB,EAAA,CAAAsB,UAAA,2BAAAC,+DAAAC,MAAA;QAAA,OAAAN,GAAA,CAAAhC,QAAA,CAAAC,QAAA,GAAAqC,MAAA;MAAA,EAA+B;MAFnCxB,EAAA,CAAAqB,YAAA,EAOC;MAELrB,EAAA,CAAAmB,cAAA,qBAAgB;MAGRnB,EAAA,CAAAsB,UAAA,2BAAAG,+DAAAD,MAAA;QAAA,OAAAN,GAAA,CAAAhC,QAAA,CAAAE,QAAA,GAAAoC,MAAA;MAAA,EAA+B;MAFnCxB,EAAA,CAAAqB,YAAA,EAOC;MAIbrB,EAAA,CAAAmB,cAAA,wBAAkB;MAGVnB,EAAA,CAAAsB,UAAA,mBAAAI,yDAAA;QAAA,OAASR,GAAA,CAAA1B,SAAA,EAAW;MAAA,EAAC;MAGrBQ,EAAA,CAAAoB,MAAA,gBACJ;MAAApB,EAAA,CAAAqB,YAAA,EAAS;;;MA1BGrB,EAAA,CAAA2B,SAAA,GAA+B;MAA/B3B,EAAA,CAAA4B,UAAA,YAAAV,GAAA,CAAAhC,QAAA,CAAAC,QAAA,CAA+B;MAU/Ba,EAAA,CAAA2B,SAAA,GAA+B;MAA/B3B,EAAA,CAAA4B,UAAA,YAAAV,GAAA,CAAAhC,QAAA,CAAAE,QAAA,CAA+B;;;;;;SDRtCR,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}