{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../fetch-api-data.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/button\";\nclass UserRegistrationFormComponent {\n  constructor(fetchApiData, dialogRef, snackBar) {\n    this.fetchApiData = fetchApiData;\n    this.dialogRef = dialogRef;\n    this.snackBar = snackBar;\n    this.userData = {\n      Username: '',\n      Password: '',\n      Email: '',\n      Birthday: ''\n    };\n  }\n  ngOnInit() {}\n  registerUser() {\n    this.fetchApiData.userRegistration(this.userData).subscribe(result => {\n      this.dialogRef.close();\n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n    }, result => {\n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n    });\n  }\n}\nUserRegistrationFormComponent.ɵfac = function UserRegistrationFormComponent_Factory(t) {\n  return new (t || UserRegistrationFormComponent)(i0.ɵɵdirectiveInject(i1.FetchApiDataService), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n};\nUserRegistrationFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserRegistrationFormComponent,\n  selectors: [[\"app-user-registration-form\"]],\n  inputs: {\n    userData: \"userData\"\n  },\n  decls: 17,\n  vars: 4,\n  consts: [[\"matInput\", \"\", \"placeholder\", \"Username\", \"type\", \"text\", \"name\", \"Username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"Password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"email\", \"placeholder\", \"Email\", \"name\", \"Email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"date\", \"placeholder\", \"Birthday\", \"name\", \"Birthday\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function UserRegistrationFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"mat-card-title\");\n      i0.ɵɵtext(3, \"Sign Up!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"form\")(6, \"mat-form-field\")(7, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationFormComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.userData.Username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationFormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.userData.Password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"mat-form-field\")(11, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationFormComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.userData.Email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function UserRegistrationFormComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.userData.Birthday = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(14, \"mat-card-actions\")(15, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function UserRegistrationFormComponent_Template_button_click_15_listener() {\n        return ctx.registerUser();\n      });\n      i0.ɵɵtext(16, \" Sign Up \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.userData.Username);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.userData.Password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.userData.Email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.userData.Birthday);\n    }\n  },\n  dependencies: [i4.MatCard, i4.MatCardActions, i4.MatCardContent, i4.MatCardHeader, i4.MatCardTitle, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm, i6.MatInput, i7.MatFormField, i8.MatButton],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { UserRegistrationFormComponent };","map":{"version":3,"names":["UserRegistrationFormComponent","constructor","fetchApiData","dialogRef","snackBar","userData","Username","Password","Email","Birthday","ngOnInit","registerUser","userRegistration","subscribe","result","close","open","duration","i0","ɵɵdirectiveInject","i1","FetchApiDataService","i2","MatDialogRef","i3","MatSnackBar","selectors","inputs","decls","vars","consts","template","UserRegistrationFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UserRegistrationFormComponent_Template_input_ngModelChange_7_listener","$event","UserRegistrationFormComponent_Template_input_ngModelChange_9_listener","UserRegistrationFormComponent_Template_input_ngModelChange_11_listener","UserRegistrationFormComponent_Template_input_ngModelChange_13_listener","UserRegistrationFormComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/dan/Documents/GitHub/myFlix-Angular-client/src/app/user-registration-form/user-registration-form.component.ts","/Users/dan/Documents/GitHub/myFlix-Angular-client/src/app/user-registration-form/user-registration-form.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-registration-form',\n  templateUrl: './user-registration-form.component.html',\n  styleUrls: ['./user-registration-form.component.scss']\n})\nexport class UserRegistrationFormComponent implements OnInit {\n\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public dialogRef: MatDialogRef<UserRegistrationFormComponent>,\n    public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n      \n  }\n\n  registerUser(): void {\n    this.fetchApiData.userRegistration(this.userData).subscribe((result) => {\n      this.dialogRef.close();\n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n    }, (result) => {\n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n    });\n  }\n}\n\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>Sign Up!</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form>\n            <mat-form-field>\n                <input\n                    matInput\n                    [(ngModel)]=\"userData.Username\"\n                    placeholder=\"Username\"\n                    type=\"text\"\n                    name=\"Username\"\n                    required\n                >\n            </mat-form-field>\n            <mat-form-field>\n                <input\n                    matInput\n                    [(ngModel)]=\"userData.Password\"\n                    type = \"password\"\n                    placeholder=\"Password\"\n                    name=\"Password\"\n                    required\n                >\n            </mat-form-field>\n            <mat-form-field>\n                <input\n                    matInput\n                    [(ngModel)]=\"userData.Email\"\n                    type = \"email\"\n                    placeholder=\"Email\"\n                    name=\"Email\"\n                    required\n                >\n            </mat-form-field>\n            <mat-form-field>\n                <input\n                    matInput\n                    [(ngModel)]=\"userData.Birthday\"\n                    type = \"date\"\n                    placeholder=\"Birthday\"  \n                    name=\"Birthday\"\n                >\n            </mat-form-field>\n        </form>\n    </mat-card-content>\n    <mat-card-actions>\n        <button\n            mat-raised-button\n            (click)=\"registerUser()\"\n            color=\"primary\"\n        >\n            Sign Up\n        </button>\n    </mat-card-actions>\n</mat-card>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}